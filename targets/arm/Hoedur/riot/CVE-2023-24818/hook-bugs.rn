// Detect if a netif header without src len is created and an entry from the reassembly buffer is retrieved withouth a src len
// In that case a uninitialisezed entry is returned and the bug has been triggered
struct NetifHdr { missing_src }

pub fn main(api) {
    let netif_hdr = NetifHdr { missing_src: 0 };
    api.on_basic_block(Some(symbolizer::resolve("gnrc_netif_hdr_build")?), |_| gnrc_netif_hdr_build(netif_hdr));
    api.on_basic_block(Some(symbolizer::resolve("gnrc_sixlowpan_frag_vrb_get")?), |_| gnrc_sixlowpan_frag_vrb_get(netif_hdr));
}

fn gnrc_sixlowpan_frag_vrb_get(netif_hdr) {
    let src_len = register::read("R1")?;
    if src_len == 0 {
        netif_hdr.missing_src = 1;
    }
}

fn gnrc_netif_hdr_build(netif_hdr) {
    let src_len = register::read("R1")?;
    if src_len == 0 && netif_hdr.missing_src == 1 {
        input::add_bug("new-Bug-CVE-2023-24818");
    }
}
